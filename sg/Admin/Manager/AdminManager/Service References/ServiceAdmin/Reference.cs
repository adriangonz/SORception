//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdminManager.ServiceAdmin {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpDesguace", Namespace="http://sorception.azurewebsites.net/")]
    [System.SerializableAttribute()]
    public partial class ExpDesguace : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                if ((this.activeField.Equals(value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ExpTaller", Namespace="http://sorception.azurewebsites.net/")]
    [System.SerializableAttribute()]
    public partial class ExpTaller : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool active {
            get {
                return this.activeField;
            }
            set {
                if ((this.activeField.Equals(value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceAdmin.IGestionAdmin")]
    public interface IGestionAdmin {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/getDesguaces", ReplyAction="http://tempuri.org/IGestionAdmin/getDesguacesResponse")]
        AdminManager.ServiceAdmin.ExpDesguace[] getDesguaces();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/getDesguaces", ReplyAction="http://tempuri.org/IGestionAdmin/getDesguacesResponse")]
        System.Threading.Tasks.Task<AdminManager.ServiceAdmin.ExpDesguace[]> getDesguacesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/getTalleres", ReplyAction="http://tempuri.org/IGestionAdmin/getTalleresResponse")]
        AdminManager.ServiceAdmin.ExpTaller[] getTalleres();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/getTalleres", ReplyAction="http://tempuri.org/IGestionAdmin/getTalleresResponse")]
        System.Threading.Tasks.Task<AdminManager.ServiceAdmin.ExpTaller[]> getTalleresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/activeDesguace", ReplyAction="http://tempuri.org/IGestionAdmin/activeDesguaceResponse")]
        int activeDesguace(int id, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/activeDesguace", ReplyAction="http://tempuri.org/IGestionAdmin/activeDesguaceResponse")]
        System.Threading.Tasks.Task<int> activeDesguaceAsync(int id, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/activeTaller", ReplyAction="http://tempuri.org/IGestionAdmin/activeTallerResponse")]
        int activeTaller(int id, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/activeTaller", ReplyAction="http://tempuri.org/IGestionAdmin/activeTallerResponse")]
        System.Threading.Tasks.Task<int> activeTallerAsync(int id, bool active);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/deleteTaller", ReplyAction="http://tempuri.org/IGestionAdmin/deleteTallerResponse")]
        int deleteTaller(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/deleteTaller", ReplyAction="http://tempuri.org/IGestionAdmin/deleteTallerResponse")]
        System.Threading.Tasks.Task<int> deleteTallerAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/deleteDesguace", ReplyAction="http://tempuri.org/IGestionAdmin/deleteDesguaceResponse")]
        int deleteDesguace(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGestionAdmin/deleteDesguace", ReplyAction="http://tempuri.org/IGestionAdmin/deleteDesguaceResponse")]
        System.Threading.Tasks.Task<int> deleteDesguaceAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGestionAdminChannel : AdminManager.ServiceAdmin.IGestionAdmin, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GestionAdminClient : System.ServiceModel.ClientBase<AdminManager.ServiceAdmin.IGestionAdmin>, AdminManager.ServiceAdmin.IGestionAdmin {
        
        public GestionAdminClient() {
        }
        
        public GestionAdminClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GestionAdminClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionAdminClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GestionAdminClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AdminManager.ServiceAdmin.ExpDesguace[] getDesguaces() {
            return base.Channel.getDesguaces();
        }
        
        public System.Threading.Tasks.Task<AdminManager.ServiceAdmin.ExpDesguace[]> getDesguacesAsync() {
            return base.Channel.getDesguacesAsync();
        }
        
        public AdminManager.ServiceAdmin.ExpTaller[] getTalleres() {
            return base.Channel.getTalleres();
        }
        
        public System.Threading.Tasks.Task<AdminManager.ServiceAdmin.ExpTaller[]> getTalleresAsync() {
            return base.Channel.getTalleresAsync();
        }
        
        public int activeDesguace(int id, bool active) {
            return base.Channel.activeDesguace(id, active);
        }
        
        public System.Threading.Tasks.Task<int> activeDesguaceAsync(int id, bool active) {
            return base.Channel.activeDesguaceAsync(id, active);
        }
        
        public int activeTaller(int id, bool active) {
            return base.Channel.activeTaller(id, active);
        }
        
        public System.Threading.Tasks.Task<int> activeTallerAsync(int id, bool active) {
            return base.Channel.activeTallerAsync(id, active);
        }
        
        public int deleteTaller(int id) {
            return base.Channel.deleteTaller(id);
        }
        
        public System.Threading.Tasks.Task<int> deleteTallerAsync(int id) {
            return base.Channel.deleteTallerAsync(id);
        }
        
        public int deleteDesguace(int id) {
            return base.Channel.deleteDesguace(id);
        }
        
        public System.Threading.Tasks.Task<int> deleteDesguaceAsync(int id) {
            return base.Channel.deleteDesguaceAsync(id);
        }
    }
}
